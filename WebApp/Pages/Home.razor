@page "/"
@using WebApp.Service

@inject IUserService UserService
@inject Service.HighlightServices.IHighlightService HighlightService


<div class="text-center mt-4">

    <h1 class="display-4 fw-bold">Velkommen til Whist-holdet</h1>
    <p class="lead fst-italic mb-4">
        Kortene flyver, Irish coffeeen flyder, og bøderne falder
    </p>

    <!-- Billede af kort -->
    <img src="Images/Cards.png" alt="Kortspil"
         style="max-width: 300px; width: 60%; height: auto;" />

    <div class="mx-auto" style="max-width: 750px; text-align: left;">

        <p>
            Velkommen til vores lille digitale klubhus – et sted hvor vi holder styr på bøder, skæve highlights og alle de små ting, der gør vores spilleaftener til noget særligt.
        </p>

        <p>
            Her finder du alt det, der binder vores aftener sammen: hvem der skylder hvad, hvilke regler vi har, og sjove øjeblikke vi aldrig helt glemmer (men heldigvis har skrevet ned). Vi spiller mest Whist, men alt fra quiz til minigolf har udløst både grin, bøder og legendariske hændelser.
        </p>

        <p>
            Så tag et kig rundt, genbesøg nogle af de bedste øjeblikke, eller hold styr på hvem der skylder fadøllen næste gang. Det hele starter og slutter med en god hånd kort og lidt kærligt kaos.
        </p>

    </div>

    <!-- Diasshow som uendeligt, glidende billedevogn -->
    @if (ImageUrls?.Any() ?? false)
    {
        <div class="slideshow">
            <div class="slideshow-track">
                @* Første runde *@
                @foreach (var url in ImageUrls)
                {
                    <img src="@url" class="slideshow-image" />
                }
                @* Duplicate for seamless loop *@
                @foreach (var url in ImageUrls)
                {
                    <img src="@url" class="slideshow-image" />
                }
            </div>
        </div>
    }
    else
    {
        <p>Ingen billeder endnu…</p>
    }

</div>

@code {
    private List<string> ImageUrls = new();
    private int currentImageIndex = 0;
    private string? CurrentImage => ImageUrls.Count > 0 ? ImageUrls[currentImageIndex] : null;
    private string fadeClass = "fade-image";

    private System.Timers.Timer? timer;

    protected override async Task OnInitializedAsync()
    {
        var users = await UserService.GetAll();
        var highlights = await HighlightService.GetAll();

        ImageUrls = users
            .Where(u => !string.IsNullOrEmpty(u.ImageUrl))
            .Select(u => u.ImageUrl!)
            .ToList();

        ImageUrls.AddRange(highlights
            .Where(h => !string.IsNullOrEmpty(h.ImageUrl) && !h.IsPrivate)
            .Select(h => h.ImageUrl!));

        timer = new System.Timers.Timer(3000); // Skift hvert 3. sekund
        timer.Elapsed += (s, e) =>
        {
            fadeClass = "";
            InvokeAsync(StateHasChanged);

            Task.Delay(100).ContinueWith(_ =>
            {
                currentImageIndex = (currentImageIndex + 1) % ImageUrls.Count;
                fadeClass = "fade-image";
                InvokeAsync(StateHasChanged);
            });
        };

        timer.Start(); // ✅ Dette aktiverer billedskiftet!
    }

    public void Dispose()
    {
        timer?.Stop();
        timer?.Dispose();
    }
}