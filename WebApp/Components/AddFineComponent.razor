@using Core
@using WebApp.Service
@inject IUserService UserService
@inject Service.FineServices.IFineService FineService

@if (showModal)
{
    <div style="border: 1px solid gray; background: white; padding: 20px; margin-top: 20px;">
        <h3>@(FineToEdit is null ? "Opret ny bøde" : "Rediger bøde")</h3>

        @if (FineToEdit is null)
        {
            <select @bind="SelectedUserId">
                <option value="0">-- Vælg bruger --</option>
                @foreach (var user in Users)
                {
                    <option value="@user.Id">@user.NickName</option>
                }
            </select>
        }

        <input type="number" @bind="Amount" placeholder="Beløb" />
        <input type="text" @bind="Comment" placeholder="Kommentar" />

        <div>
            <button @onclick="Submit">@(FineToEdit is null ? "Tilføj bøde" : "Gem ændringer")</button>
            <button @onclick="Close">Annuller</button>
        </div>
    </div>
}

@code {
    private bool showModal = false;
    private int SelectedUserId = 0;
    private decimal Amount = 0;
    private string Comment = "";
    private Fine? FineToEdit = null;

    [Parameter] public EventCallback OnFineAdded { get; set; }
    [Parameter] public List<User> Users { get; set; } = new();

    public async Task Show(Fine? fine = null)
    {
        FineToEdit = fine;
        await LoadUsers();

        if (FineToEdit is not null)
        {
            SelectedUserId = fine.UserId;
            Amount = fine.Amount;
            Comment = fine.Comment;
        }
        else
        {
            SelectedUserId = 0;
            Amount = 0;
            Comment = "";
        }

        showModal = true;
        StateHasChanged();
    }

    private void Close()
    {
        showModal = false;
        SelectedUserId = 0;
        Amount = 0;
        Comment = "";
        FineToEdit = null;
    }

    private async Task Submit()
    {
        if (SelectedUserId <= 0 || Amount <= 0)
            return;

        if (FineToEdit is not null)
        {
            FineToEdit.UserId = SelectedUserId;
            FineToEdit.Amount = Amount;
            FineToEdit.Comment = Comment;

            await FineService.Update(FineToEdit);
        }
        else
        {
            var fine = new Fine
            {
                UserId = SelectedUserId,
                Amount = Amount,
                Comment = Comment,
                Date = DateTime.Now,
                IsPaid = false
            };

            await FineService.Add(fine);
        }

        await OnFineAdded.InvokeAsync();
        Close();
    }
    
    private async Task LoadUsers()
    {
        Users = (await UserService.GetAll()).ToList();
    }
}
